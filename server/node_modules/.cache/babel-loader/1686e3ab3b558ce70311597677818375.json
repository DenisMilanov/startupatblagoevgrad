{"ast":null,"code":"// drag\n(function (window, factory) {\n  // universal module definition\n  if (typeof define == 'function' && define.amd) {\n    // AMD\n    define(['./flickity', 'unidragger/unidragger', 'fizzy-ui-utils/utils'], function (Flickity, Unidragger, utils) {\n      return factory(window, Flickity, Unidragger, utils);\n    });\n  } else if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(window, require('./flickity'), require('unidragger'), require('fizzy-ui-utils'));\n  } else {\n    // browser global\n    window.Flickity = factory(window, window.Flickity, window.Unidragger, window.fizzyUIUtils);\n  }\n})(window, function factory(window, Flickity, Unidragger, utils) {\n  'use strict'; // ----- defaults ----- //\n\n  utils.extend(Flickity.defaults, {\n    draggable: '>1',\n    dragThreshold: 3\n  }); // ----- create ----- //\n\n  Flickity.createMethods.push('_createDrag'); // -------------------------- drag prototype -------------------------- //\n\n  var proto = Flickity.prototype;\n  utils.extend(proto, Unidragger.prototype);\n  proto._touchActionValue = 'pan-y'; // --------------------------  -------------------------- //\n\n  proto._createDrag = function () {\n    this.on('activate', this.onActivateDrag);\n    this.on('uiChange', this._uiChangeDrag);\n    this.on('deactivate', this.onDeactivateDrag);\n    this.on('cellChange', this.updateDraggable); // TODO updateDraggable on resize? if groupCells & slides change\n  };\n\n  proto.onActivateDrag = function () {\n    this.handles = [this.viewport];\n    this.bindHandles();\n    this.updateDraggable();\n  };\n\n  proto.onDeactivateDrag = function () {\n    this.unbindHandles();\n    this.element.classList.remove('is-draggable');\n  };\n\n  proto.updateDraggable = function () {\n    // disable dragging if less than 2 slides. #278\n    if (this.options.draggable == '>1') {\n      this.isDraggable = this.slides.length > 1;\n    } else {\n      this.isDraggable = this.options.draggable;\n    }\n\n    if (this.isDraggable) {\n      this.element.classList.add('is-draggable');\n    } else {\n      this.element.classList.remove('is-draggable');\n    }\n  }; // backwards compatibility\n\n\n  proto.bindDrag = function () {\n    this.options.draggable = true;\n    this.updateDraggable();\n  };\n\n  proto.unbindDrag = function () {\n    this.options.draggable = false;\n    this.updateDraggable();\n  };\n\n  proto._uiChangeDrag = function () {\n    delete this.isFreeScrolling;\n  }; // -------------------------- pointer events -------------------------- //\n\n\n  proto.pointerDown = function (event, pointer) {\n    if (!this.isDraggable) {\n      this._pointerDownDefault(event, pointer);\n\n      return;\n    }\n\n    var isOkay = this.okayPointerDown(event);\n\n    if (!isOkay) {\n      return;\n    }\n\n    this._pointerDownPreventDefault(event);\n\n    this.pointerDownFocus(event); // blur\n\n    if (document.activeElement != this.element) {\n      // do not blur if already focused\n      this.pointerDownBlur();\n    } // stop if it was moving\n\n\n    this.dragX = this.x;\n    this.viewport.classList.add('is-pointer-down'); // track scrolling\n\n    this.pointerDownScroll = getScrollPosition();\n    window.addEventListener('scroll', this);\n\n    this._pointerDownDefault(event, pointer);\n  }; // default pointerDown logic, used for staticClick\n\n\n  proto._pointerDownDefault = function (event, pointer) {\n    // track start event position\n    // Safari 9 overrides pageX and pageY. These values needs to be copied. #779\n    this.pointerDownPointer = {\n      pageX: pointer.pageX,\n      pageY: pointer.pageY\n    }; // bind move and end events\n\n    this._bindPostStartEvents(event);\n\n    this.dispatchEvent('pointerDown', event, [pointer]);\n  };\n\n  var focusNodes = {\n    INPUT: true,\n    TEXTAREA: true,\n    SELECT: true\n  };\n\n  proto.pointerDownFocus = function (event) {\n    var isFocusNode = focusNodes[event.target.nodeName];\n\n    if (!isFocusNode) {\n      this.focus();\n    }\n  };\n\n  proto._pointerDownPreventDefault = function (event) {\n    var isTouchStart = event.type == 'touchstart';\n    var isTouchPointer = event.pointerType == 'touch';\n    var isFocusNode = focusNodes[event.target.nodeName];\n\n    if (!isTouchStart && !isTouchPointer && !isFocusNode) {\n      event.preventDefault();\n    }\n  }; // ----- move ----- //\n\n\n  proto.hasDragStarted = function (moveVector) {\n    return Math.abs(moveVector.x) > this.options.dragThreshold;\n  }; // ----- up ----- //\n\n\n  proto.pointerUp = function (event, pointer) {\n    delete this.isTouchScrolling;\n    this.viewport.classList.remove('is-pointer-down');\n    this.dispatchEvent('pointerUp', event, [pointer]);\n\n    this._dragPointerUp(event, pointer);\n  };\n\n  proto.pointerDone = function () {\n    window.removeEventListener('scroll', this);\n    delete this.pointerDownScroll;\n  }; // -------------------------- dragging -------------------------- //\n\n\n  proto.dragStart = function (event, pointer) {\n    if (!this.isDraggable) {\n      return;\n    }\n\n    this.dragStartPosition = this.x;\n    this.startAnimation();\n    window.removeEventListener('scroll', this);\n    this.dispatchEvent('dragStart', event, [pointer]);\n  };\n\n  proto.pointerMove = function (event, pointer) {\n    var moveVector = this._dragPointerMove(event, pointer);\n\n    this.dispatchEvent('pointerMove', event, [pointer, moveVector]);\n\n    this._dragMove(event, pointer, moveVector);\n  };\n\n  proto.dragMove = function (event, pointer, moveVector) {\n    if (!this.isDraggable) {\n      return;\n    }\n\n    event.preventDefault();\n    this.previousDragX = this.dragX; // reverse if right-to-left\n\n    var direction = this.options.rightToLeft ? -1 : 1;\n\n    if (this.options.wrapAround) {\n      // wrap around move. #589\n      moveVector.x %= this.slideableWidth;\n    }\n\n    var dragX = this.dragStartPosition + moveVector.x * direction;\n\n    if (!this.options.wrapAround && this.slides.length) {\n      // slow drag\n      var originBound = Math.max(-this.slides[0].target, this.dragStartPosition);\n      dragX = dragX > originBound ? (dragX + originBound) * 0.5 : dragX;\n      var endBound = Math.min(-this.getLastSlide().target, this.dragStartPosition);\n      dragX = dragX < endBound ? (dragX + endBound) * 0.5 : dragX;\n    }\n\n    this.dragX = dragX;\n    this.dragMoveTime = new Date();\n    this.dispatchEvent('dragMove', event, [pointer, moveVector]);\n  };\n\n  proto.dragEnd = function (event, pointer) {\n    if (!this.isDraggable) {\n      return;\n    }\n\n    if (this.options.freeScroll) {\n      this.isFreeScrolling = true;\n    } // set selectedIndex based on where flick will end up\n\n\n    var index = this.dragEndRestingSelect();\n\n    if (this.options.freeScroll && !this.options.wrapAround) {\n      // if free-scroll & not wrap around\n      // do not free-scroll if going outside of bounding slides\n      // so bounding slides can attract slider, and keep it in bounds\n      var restingX = this.getRestingPosition();\n      this.isFreeScrolling = -restingX > this.slides[0].target && -restingX < this.getLastSlide().target;\n    } else if (!this.options.freeScroll && index == this.selectedIndex) {\n      // boost selection if selected index has not changed\n      index += this.dragEndBoostSelect();\n    }\n\n    delete this.previousDragX; // apply selection\n    // TODO refactor this, selecting here feels weird\n    // HACK, set flag so dragging stays in correct direction\n\n    this.isDragSelect = this.options.wrapAround;\n    this.select(index);\n    delete this.isDragSelect;\n    this.dispatchEvent('dragEnd', event, [pointer]);\n  };\n\n  proto.dragEndRestingSelect = function () {\n    var restingX = this.getRestingPosition(); // how far away from selected slide\n\n    var distance = Math.abs(this.getSlideDistance(-restingX, this.selectedIndex)); // get closet resting going up and going down\n\n    var positiveResting = this._getClosestResting(restingX, distance, 1);\n\n    var negativeResting = this._getClosestResting(restingX, distance, -1); // use closer resting for wrap-around\n\n\n    var index = positiveResting.distance < negativeResting.distance ? positiveResting.index : negativeResting.index;\n    return index;\n  };\n  /**\n   * given resting X and distance to selected cell\n   * get the distance and index of the closest cell\n   * @param {Number} restingX - estimated post-flick resting position\n   * @param {Number} distance - distance to selected cell\n   * @param {Integer} increment - +1 or -1, going up or down\n   * @returns {Object} - { distance: {Number}, index: {Integer} }\n   */\n\n\n  proto._getClosestResting = function (restingX, distance, increment) {\n    var index = this.selectedIndex;\n    var minDistance = Infinity;\n    var condition = this.options.contain && !this.options.wrapAround ? // if contain, keep going if distance is equal to minDistance\n    function (dist, minDist) {\n      return dist <= minDist;\n    } : function (dist, minDist) {\n      return dist < minDist;\n    };\n\n    while (condition(distance, minDistance)) {\n      // measure distance to next cell\n      index += increment;\n      minDistance = distance;\n      distance = this.getSlideDistance(-restingX, index);\n\n      if (distance === null) {\n        break;\n      }\n\n      distance = Math.abs(distance);\n    }\n\n    return {\n      distance: minDistance,\n      // selected was previous index\n      index: index - increment\n    };\n  };\n  /**\n   * measure distance between x and a slide target\n   * @param {Number} x - horizontal position\n   * @param {Integer} index - slide index\n   * @returns {Number} - slide distance\n   */\n\n\n  proto.getSlideDistance = function (x, index) {\n    var len = this.slides.length; // wrap around if at least 2 slides\n\n    var isWrapAround = this.options.wrapAround && len > 1;\n    var slideIndex = isWrapAround ? utils.modulo(index, len) : index;\n    var slide = this.slides[slideIndex];\n\n    if (!slide) {\n      return null;\n    } // add distance for wrap-around slides\n\n\n    var wrap = isWrapAround ? this.slideableWidth * Math.floor(index / len) : 0;\n    return x - (slide.target + wrap);\n  };\n\n  proto.dragEndBoostSelect = function () {\n    // do not boost if no previousDragX or dragMoveTime\n    if (this.previousDragX === undefined || !this.dragMoveTime || // or if drag was held for 100 ms\n    new Date() - this.dragMoveTime > 100) {\n      return 0;\n    }\n\n    var distance = this.getSlideDistance(-this.dragX, this.selectedIndex);\n    var delta = this.previousDragX - this.dragX;\n\n    if (distance > 0 && delta > 0) {\n      // boost to next if moving towards the right, and positive velocity\n      return 1;\n    } else if (distance < 0 && delta < 0) {\n      // boost to previous if moving towards the left, and negative velocity\n      return -1;\n    }\n\n    return 0;\n  }; // ----- staticClick ----- //\n\n\n  proto.staticClick = function (event, pointer) {\n    // get clickedCell, if cell was clicked\n    var clickedCell = this.getParentCell(event.target);\n    var cellElem = clickedCell && clickedCell.element;\n    var cellIndex = clickedCell && this.cells.indexOf(clickedCell);\n    this.dispatchEvent('staticClick', event, [pointer, cellElem, cellIndex]);\n  }; // ----- scroll ----- //\n\n\n  proto.onscroll = function () {\n    var scroll = getScrollPosition();\n    var scrollMoveX = this.pointerDownScroll.x - scroll.x;\n    var scrollMoveY = this.pointerDownScroll.y - scroll.y; // cancel click/tap if scroll is too much\n\n    if (Math.abs(scrollMoveX) > 3 || Math.abs(scrollMoveY) > 3) {\n      this._pointerDone();\n    }\n  }; // ----- utils ----- //\n\n\n  function getScrollPosition() {\n    return {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  } // -----  ----- //\n\n\n  return Flickity;\n});","map":{"version":3,"sources":["C:/Users/denis/OneDrive/Documents/GitHub/startupatblagoevgrad-website/node_modules/flickity/js/drag.js"],"names":["window","factory","define","amd","Flickity","Unidragger","utils","module","exports","require","fizzyUIUtils","extend","defaults","draggable","dragThreshold","createMethods","push","proto","prototype","_touchActionValue","_createDrag","on","onActivateDrag","_uiChangeDrag","onDeactivateDrag","updateDraggable","handles","viewport","bindHandles","unbindHandles","element","classList","remove","options","isDraggable","slides","length","add","bindDrag","unbindDrag","isFreeScrolling","pointerDown","event","pointer","_pointerDownDefault","isOkay","okayPointerDown","_pointerDownPreventDefault","pointerDownFocus","document","activeElement","pointerDownBlur","dragX","x","pointerDownScroll","getScrollPosition","addEventListener","pointerDownPointer","pageX","pageY","_bindPostStartEvents","dispatchEvent","focusNodes","INPUT","TEXTAREA","SELECT","isFocusNode","target","nodeName","focus","isTouchStart","type","isTouchPointer","pointerType","preventDefault","hasDragStarted","moveVector","Math","abs","pointerUp","isTouchScrolling","_dragPointerUp","pointerDone","removeEventListener","dragStart","dragStartPosition","startAnimation","pointerMove","_dragPointerMove","_dragMove","dragMove","previousDragX","direction","rightToLeft","wrapAround","slideableWidth","originBound","max","endBound","min","getLastSlide","dragMoveTime","Date","dragEnd","freeScroll","index","dragEndRestingSelect","restingX","getRestingPosition","selectedIndex","dragEndBoostSelect","isDragSelect","select","distance","getSlideDistance","positiveResting","_getClosestResting","negativeResting","increment","minDistance","Infinity","condition","contain","dist","minDist","len","isWrapAround","slideIndex","modulo","slide","wrap","floor","undefined","delta","staticClick","clickedCell","getParentCell","cellElem","cellIndex","cells","indexOf","onscroll","scroll","scrollMoveX","scrollMoveY","y","_pointerDone","pageXOffset","pageYOffset"],"mappings":"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","sourcesContent":["// drag\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      './flickity',\n      'unidragger/unidragger',\n      'fizzy-ui-utils/utils',\n    ], function( Flickity, Unidragger, utils ) {\n      return factory( window, Flickity, Unidragger, utils );\n    } );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        window,\n        require('./flickity'),\n        require('unidragger'),\n        require('fizzy-ui-utils')\n    );\n  } else {\n    // browser global\n    window.Flickity = factory(\n        window,\n        window.Flickity,\n        window.Unidragger,\n        window.fizzyUIUtils\n    );\n  }\n\n}( window, function factory( window, Flickity, Unidragger, utils ) {\n\n'use strict';\n\n// ----- defaults ----- //\n\nutils.extend( Flickity.defaults, {\n  draggable: '>1',\n  dragThreshold: 3,\n} );\n\n// ----- create ----- //\n\nFlickity.createMethods.push('_createDrag');\n\n// -------------------------- drag prototype -------------------------- //\n\nvar proto = Flickity.prototype;\nutils.extend( proto, Unidragger.prototype );\nproto._touchActionValue = 'pan-y';\n\n// --------------------------  -------------------------- //\n\nproto._createDrag = function() {\n  this.on( 'activate', this.onActivateDrag );\n  this.on( 'uiChange', this._uiChangeDrag );\n  this.on( 'deactivate', this.onDeactivateDrag );\n  this.on( 'cellChange', this.updateDraggable );\n  // TODO updateDraggable on resize? if groupCells & slides change\n};\n\nproto.onActivateDrag = function() {\n  this.handles = [ this.viewport ];\n  this.bindHandles();\n  this.updateDraggable();\n};\n\nproto.onDeactivateDrag = function() {\n  this.unbindHandles();\n  this.element.classList.remove('is-draggable');\n};\n\nproto.updateDraggable = function() {\n  // disable dragging if less than 2 slides. #278\n  if ( this.options.draggable == '>1' ) {\n    this.isDraggable = this.slides.length > 1;\n  } else {\n    this.isDraggable = this.options.draggable;\n  }\n  if ( this.isDraggable ) {\n    this.element.classList.add('is-draggable');\n  } else {\n    this.element.classList.remove('is-draggable');\n  }\n};\n\n// backwards compatibility\nproto.bindDrag = function() {\n  this.options.draggable = true;\n  this.updateDraggable();\n};\n\nproto.unbindDrag = function() {\n  this.options.draggable = false;\n  this.updateDraggable();\n};\n\nproto._uiChangeDrag = function() {\n  delete this.isFreeScrolling;\n};\n\n// -------------------------- pointer events -------------------------- //\n\nproto.pointerDown = function( event, pointer ) {\n  if ( !this.isDraggable ) {\n    this._pointerDownDefault( event, pointer );\n    return;\n  }\n  var isOkay = this.okayPointerDown( event );\n  if ( !isOkay ) {\n    return;\n  }\n\n  this._pointerDownPreventDefault( event );\n  this.pointerDownFocus( event );\n  // blur\n  if ( document.activeElement != this.element ) {\n    // do not blur if already focused\n    this.pointerDownBlur();\n  }\n\n  // stop if it was moving\n  this.dragX = this.x;\n  this.viewport.classList.add('is-pointer-down');\n  // track scrolling\n  this.pointerDownScroll = getScrollPosition();\n  window.addEventListener( 'scroll', this );\n\n  this._pointerDownDefault( event, pointer );\n};\n\n// default pointerDown logic, used for staticClick\nproto._pointerDownDefault = function( event, pointer ) {\n  // track start event position\n  // Safari 9 overrides pageX and pageY. These values needs to be copied. #779\n  this.pointerDownPointer = {\n    pageX: pointer.pageX,\n    pageY: pointer.pageY,\n  };\n  // bind move and end events\n  this._bindPostStartEvents( event );\n  this.dispatchEvent( 'pointerDown', event, [ pointer ] );\n};\n\nvar focusNodes = {\n  INPUT: true,\n  TEXTAREA: true,\n  SELECT: true,\n};\n\nproto.pointerDownFocus = function( event ) {\n  var isFocusNode = focusNodes[ event.target.nodeName ];\n  if ( !isFocusNode ) {\n    this.focus();\n  }\n};\n\nproto._pointerDownPreventDefault = function( event ) {\n  var isTouchStart = event.type == 'touchstart';\n  var isTouchPointer = event.pointerType == 'touch';\n  var isFocusNode = focusNodes[ event.target.nodeName ];\n  if ( !isTouchStart && !isTouchPointer && !isFocusNode ) {\n    event.preventDefault();\n  }\n};\n\n// ----- move ----- //\n\nproto.hasDragStarted = function( moveVector ) {\n  return Math.abs( moveVector.x ) > this.options.dragThreshold;\n};\n\n// ----- up ----- //\n\nproto.pointerUp = function( event, pointer ) {\n  delete this.isTouchScrolling;\n  this.viewport.classList.remove('is-pointer-down');\n  this.dispatchEvent( 'pointerUp', event, [ pointer ] );\n  this._dragPointerUp( event, pointer );\n};\n\nproto.pointerDone = function() {\n  window.removeEventListener( 'scroll', this );\n  delete this.pointerDownScroll;\n};\n\n// -------------------------- dragging -------------------------- //\n\nproto.dragStart = function( event, pointer ) {\n  if ( !this.isDraggable ) {\n    return;\n  }\n  this.dragStartPosition = this.x;\n  this.startAnimation();\n  window.removeEventListener( 'scroll', this );\n  this.dispatchEvent( 'dragStart', event, [ pointer ] );\n};\n\nproto.pointerMove = function( event, pointer ) {\n  var moveVector = this._dragPointerMove( event, pointer );\n  this.dispatchEvent( 'pointerMove', event, [ pointer, moveVector ] );\n  this._dragMove( event, pointer, moveVector );\n};\n\nproto.dragMove = function( event, pointer, moveVector ) {\n  if ( !this.isDraggable ) {\n    return;\n  }\n  event.preventDefault();\n\n  this.previousDragX = this.dragX;\n  // reverse if right-to-left\n  var direction = this.options.rightToLeft ? -1 : 1;\n  if ( this.options.wrapAround ) {\n    // wrap around move. #589\n    moveVector.x %= this.slideableWidth;\n  }\n  var dragX = this.dragStartPosition + moveVector.x * direction;\n\n  if ( !this.options.wrapAround && this.slides.length ) {\n    // slow drag\n    var originBound = Math.max( -this.slides[0].target, this.dragStartPosition );\n    dragX = dragX > originBound ? ( dragX + originBound ) * 0.5 : dragX;\n    var endBound = Math.min( -this.getLastSlide().target, this.dragStartPosition );\n    dragX = dragX < endBound ? ( dragX + endBound ) * 0.5 : dragX;\n  }\n\n  this.dragX = dragX;\n\n  this.dragMoveTime = new Date();\n  this.dispatchEvent( 'dragMove', event, [ pointer, moveVector ] );\n};\n\nproto.dragEnd = function( event, pointer ) {\n  if ( !this.isDraggable ) {\n    return;\n  }\n  if ( this.options.freeScroll ) {\n    this.isFreeScrolling = true;\n  }\n  // set selectedIndex based on where flick will end up\n  var index = this.dragEndRestingSelect();\n\n  if ( this.options.freeScroll && !this.options.wrapAround ) {\n    // if free-scroll & not wrap around\n    // do not free-scroll if going outside of bounding slides\n    // so bounding slides can attract slider, and keep it in bounds\n    var restingX = this.getRestingPosition();\n    this.isFreeScrolling = -restingX > this.slides[0].target &&\n      -restingX < this.getLastSlide().target;\n  } else if ( !this.options.freeScroll && index == this.selectedIndex ) {\n    // boost selection if selected index has not changed\n    index += this.dragEndBoostSelect();\n  }\n  delete this.previousDragX;\n  // apply selection\n  // TODO refactor this, selecting here feels weird\n  // HACK, set flag so dragging stays in correct direction\n  this.isDragSelect = this.options.wrapAround;\n  this.select( index );\n  delete this.isDragSelect;\n  this.dispatchEvent( 'dragEnd', event, [ pointer ] );\n};\n\nproto.dragEndRestingSelect = function() {\n  var restingX = this.getRestingPosition();\n  // how far away from selected slide\n  var distance = Math.abs( this.getSlideDistance( -restingX, this.selectedIndex ) );\n  // get closet resting going up and going down\n  var positiveResting = this._getClosestResting( restingX, distance, 1 );\n  var negativeResting = this._getClosestResting( restingX, distance, -1 );\n  // use closer resting for wrap-around\n  var index = positiveResting.distance < negativeResting.distance ?\n    positiveResting.index : negativeResting.index;\n  return index;\n};\n\n/**\n * given resting X and distance to selected cell\n * get the distance and index of the closest cell\n * @param {Number} restingX - estimated post-flick resting position\n * @param {Number} distance - distance to selected cell\n * @param {Integer} increment - +1 or -1, going up or down\n * @returns {Object} - { distance: {Number}, index: {Integer} }\n */\nproto._getClosestResting = function( restingX, distance, increment ) {\n  var index = this.selectedIndex;\n  var minDistance = Infinity;\n  var condition = this.options.contain && !this.options.wrapAround ?\n    // if contain, keep going if distance is equal to minDistance\n    function( dist, minDist ) {\n      return dist <= minDist;\n    } : function( dist, minDist ) {\n      return dist < minDist;\n    };\n  while ( condition( distance, minDistance ) ) {\n    // measure distance to next cell\n    index += increment;\n    minDistance = distance;\n    distance = this.getSlideDistance( -restingX, index );\n    if ( distance === null ) {\n      break;\n    }\n    distance = Math.abs( distance );\n  }\n  return {\n    distance: minDistance,\n    // selected was previous index\n    index: index - increment,\n  };\n};\n\n/**\n * measure distance between x and a slide target\n * @param {Number} x - horizontal position\n * @param {Integer} index - slide index\n * @returns {Number} - slide distance\n */\nproto.getSlideDistance = function( x, index ) {\n  var len = this.slides.length;\n  // wrap around if at least 2 slides\n  var isWrapAround = this.options.wrapAround && len > 1;\n  var slideIndex = isWrapAround ? utils.modulo( index, len ) : index;\n  var slide = this.slides[ slideIndex ];\n  if ( !slide ) {\n    return null;\n  }\n  // add distance for wrap-around slides\n  var wrap = isWrapAround ? this.slideableWidth * Math.floor( index/len ) : 0;\n  return x - ( slide.target + wrap );\n};\n\nproto.dragEndBoostSelect = function() {\n  // do not boost if no previousDragX or dragMoveTime\n  if ( this.previousDragX === undefined || !this.dragMoveTime ||\n    // or if drag was held for 100 ms\n    new Date() - this.dragMoveTime > 100 ) {\n    return 0;\n  }\n\n  var distance = this.getSlideDistance( -this.dragX, this.selectedIndex );\n  var delta = this.previousDragX - this.dragX;\n  if ( distance > 0 && delta > 0 ) {\n    // boost to next if moving towards the right, and positive velocity\n    return 1;\n  } else if ( distance < 0 && delta < 0 ) {\n    // boost to previous if moving towards the left, and negative velocity\n    return -1;\n  }\n  return 0;\n};\n\n// ----- staticClick ----- //\n\nproto.staticClick = function( event, pointer ) {\n  // get clickedCell, if cell was clicked\n  var clickedCell = this.getParentCell( event.target );\n  var cellElem = clickedCell && clickedCell.element;\n  var cellIndex = clickedCell && this.cells.indexOf( clickedCell );\n  this.dispatchEvent( 'staticClick', event, [ pointer, cellElem, cellIndex ] );\n};\n\n// ----- scroll ----- //\n\nproto.onscroll = function() {\n  var scroll = getScrollPosition();\n  var scrollMoveX = this.pointerDownScroll.x - scroll.x;\n  var scrollMoveY = this.pointerDownScroll.y - scroll.y;\n  // cancel click/tap if scroll is too much\n  if ( Math.abs( scrollMoveX ) > 3 || Math.abs( scrollMoveY ) > 3 ) {\n    this._pointerDone();\n  }\n};\n\n// ----- utils ----- //\n\nfunction getScrollPosition() {\n  return {\n    x: window.pageXOffset,\n    y: window.pageYOffset,\n  };\n}\n\n// -----  ----- //\n\nreturn Flickity;\n\n} ) );\n"]},"metadata":{},"sourceType":"script"}